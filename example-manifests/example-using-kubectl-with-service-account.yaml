apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-account

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-role
rules:
- apiGroups:
  - core
  resources:
  - pods
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-role
roleRef:
  apiGroup: ""
  kind: Role
  name: test-role
subjects:
- kind: ServiceAccount
  name: test-account

---

kind: Deployment
apiVersion: apps/v1beta1
metadata:
  name: example-pod
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: example-node-and-pod-info
    spec:
      serviceAccountName: test-account
      containers:
      - name: client
        image: centos
        command: ["sh","-c"]
        args:
        - |
          yum install -y kubernetes-client

          namespace=$(</var/run/secrets/kubernetes.io/serviceaccount/namespace)
          token=$(</var/run/secrets/kubernetes.io/serviceaccount/token)
          cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt

          cluster=local
          server=https://kubernetes.default.svc
          account=test-account
  
          kubectl config set-cluster $cluster --server=$server --certificate-authority=$cert
          kubectl config set-credentials $account --token=$token
          kubectl config set-context $cluster --cluster=$cluster --user=$account \
                --namespace=$namespace
          kubectl config use-context $cluster

          # now get a list of pods
          kubectl get pods

          # hold container open
          tail -f /dev/null
